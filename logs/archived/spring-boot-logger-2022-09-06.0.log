{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 3147 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:52.183"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:52.192"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:54.327"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:54.328"}
{"message":"Finished Spring Data repository scanning in 74 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:54.408"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:54.700"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:55.737"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:55.745"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:55.746"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:55.747"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:56.006"}
{"message":"Root WebApplicationContext: initialization completed in 3740 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:56.007"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3cbfdf5c, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@42b43a6], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42f9873e]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@154864f8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$821/0x000000080111aeb8@1d622556}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:31:57.916"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:8}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317d86d23e0030642863581', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:31:57.937"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23015209}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317d86d23e0030642863581', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:31:57.937"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:9}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317d86d23e0030642863581', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:31:57.938"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:32:01.968"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:32:02.032"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:32:02.050"}
{"message":"Started RentMovieApplication in 11.164 seconds (JVM running for 11.945)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:32:02.074"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"696b4456faafd0fe","spanId":"696b4456faafd0fe","timestamp_app":"2022-09-06 20:32:10.084"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"696b4456faafd0fe","spanId":"696b4456faafd0fe","timestamp_app":"2022-09-06 20:32:10.085"}
{"message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"696b4456faafd0fe","spanId":"696b4456faafd0fe","timestamp_app":"2022-09-06 20:32:10.088"}
{"message":"Init duration for springdoc-openapi is: 485 ms","logger_name":"org.springdoc.api.AbstractOpenApiResource","thread_name":"http-nio-8082-exec-9","level":"INFO","traceId":"a74e7e503e779e85","spanId":"a74e7e503e779e85","timestamp_app":"2022-09-06 20:32:11.121"}
{"message":"Iniciando os trabalhos ","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-10","level":"INFO","traceId":"4d555f6bc2eb64ca","spanId":"4d555f6bc2eb64ca","timestamp_app":"2022-09-06 20:32:19.623"}
{"message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8082-exec-10","level":"ERROR","stack_trace":"org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"\n\tat org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)\n\tat org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:732)\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:343)\n\tat com.observability.com.rentmovie.service.RentService.findMovieById(RentService.java:37)\n\tat com.observability.com.rentmovie.service.RentService.lambda$rentMovies$1(RentService.java:27)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat com.observability.com.rentmovie.service.RentService.rentMovies(RentService.java:26)\n\tat com.observability.com.rentmovie.controller.RentController.rentMovie(RentController.java:25)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:68)\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.TraceWebServletConfiguration$LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:131)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\n\tat org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve.invoke(TraceValve.java:90)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n","traceId":"4d555f6bc2eb64ca","spanId":"4d555f6bc2eb64ca","timestamp_app":"2022-09-06 20:32:19.711"}
{"message":"Iniciando os trabalhos ","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-4","level":"INFO","traceId":"b456322212b52a80","spanId":"b456322212b52a80","timestamp_app":"2022-09-06 20:34:16.072"}
{"message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8082-exec-4","level":"ERROR","stack_trace":"org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"\n\tat org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)\n\tat org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:732)\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:343)\n\tat com.observability.com.rentmovie.service.RentService.findMovieById(RentService.java:37)\n\tat com.observability.com.rentmovie.service.RentService.lambda$rentMovies$1(RentService.java:27)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat com.observability.com.rentmovie.service.RentService.rentMovies(RentService.java:26)\n\tat com.observability.com.rentmovie.controller.RentController.rentMovie(RentController.java:25)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:68)\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.TraceWebServletConfiguration$LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:131)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\n\tat org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve.invoke(TraceValve.java:90)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n","traceId":"b456322212b52a80","spanId":"b456322212b52a80","timestamp_app":"2022-09-06 20:34:16.124"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 3493 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:35.005"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:35.011"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:37.335"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:37.337"}
{"message":"Finished Spring Data repository scanning in 65 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:37.406"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:37.649"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:38.651"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:38.659"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:38.660"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:38.660"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:38.881"}
{"message":"Root WebApplicationContext: initialization completed in 3798 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:38.882"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@210635fd, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@70ee1963], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@965bcbc]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@26f5e45d], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$821/0x000000080111aeb8@2e0652ab}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:41.135"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:10}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317d94d3725ca310fc1eb6b', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:35:41.160"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:11}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317d94d3725ca310fc1eb6b', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:35:41.161"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25883334}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317d94d3725ca310fc1eb6b', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:35:41.162"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:45.308"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:45.368"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:45.387"}
{"message":"Started RentMovieApplication in 11.764 seconds (JVM running for 12.425)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:35:45.414"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b4ad6b83c6385a58","spanId":"b4ad6b83c6385a58","timestamp_app":"2022-09-06 20:36:01.798"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b4ad6b83c6385a58","spanId":"b4ad6b83c6385a58","timestamp_app":"2022-09-06 20:36:01.798"}
{"message":"Completed initialization in 2 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b4ad6b83c6385a58","spanId":"b4ad6b83c6385a58","timestamp_app":"2022-09-06 20:36:01.801"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-2","level":"INFO","traceId":"7e6a044843c3ad9e","spanId":"7e6a044843c3ad9e","timestamp_app":"2022-09-06 20:36:08.816"}
{"message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","stack_trace":"java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.joran.spi.Interpreter@29:18 - RuntimeException in Action for tag [layout] java.lang.NumberFormatException: For input string: \"{\"\nERROR in ch.qos.logback.core.ConsoleAppender[Console] - No encoder set for the appender named \"Console\".\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:344)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:85)\n\tat org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:65)\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:344)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:302)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)\n\tat com.observability.com.rentmovie.RentMovieApplication.main(RentMovieApplication.java:13)\nCaused by: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.joran.spi.Interpreter@29:18 - RuntimeException in Action for tag [layout] java.lang.NumberFormatException: For input string: \"{\"\nERROR in ch.qos.logback.core.ConsoleAppender[Console] - No encoder set for the appender named \"Console\".\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:179)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:80)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:132)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:329)\n\t... 18 common frames omitted\n","timestamp_app":"2022-09-06 20:39:07.181"}
{"message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","stack_trace":"java.lang.IllegalStateException: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.pattern.parser.Compiler@6a1d204a - There is no conversion class registered for conversion word [traceId]\nERROR in ch.qos.logback.core.pattern.parser.Compiler@6a1d204a - [traceId] is not a valid conversion word\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:344)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEnvironmentPreparedEvent(LoggingApplicationListener.java:246)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.onApplicationEvent(LoggingApplicationListener.java:223)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)\n\tat org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)\n\tat org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:85)\n\tat org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:66)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:120)\n\tat org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:114)\n\tat org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:65)\n\tat org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:344)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:302)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)\n\tat com.observability.com.rentmovie.RentMovieApplication.main(RentMovieApplication.java:13)\nCaused by: java.lang.IllegalStateException: Logback configuration error detected: \nERROR in ch.qos.logback.core.pattern.parser.Compiler@6a1d204a - There is no conversion class registered for conversion word [traceId]\nERROR in ch.qos.logback.core.pattern.parser.Compiler@6a1d204a - [traceId] is not a valid conversion word\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:179)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initializeWithConventions(AbstractLoggingSystem.java:80)\n\tat org.springframework.boot.logging.AbstractLoggingSystem.initialize(AbstractLoggingSystem.java:60)\n\tat org.springframework.boot.logging.logback.LogbackLoggingSystem.initialize(LogbackLoggingSystem.java:132)\n\tat org.springframework.boot.context.logging.LoggingApplicationListener.initializeSystem(LoggingApplicationListener.java:329)\n\t... 18 common frames omitted\n","timestamp_app":"2022-09-06 20:39:25.918"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 4094 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:46.345"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:46.352"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:49.554"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:49.555"}
{"message":"Finished Spring Data repository scanning in 128 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:49.687"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:50.012"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:51.049"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:51.058"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:51.059"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:51.059"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:51.228"}
{"message":"Root WebApplicationContext: initialization completed in 4792 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:51.228"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@44de8e00, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@70697478], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@8f4b803]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4571cebe], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$821/0x000000080111be28@42b43a6}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:52.989"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:12}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317db389ed5521108298fdc', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:43:53.009"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:13}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317db389ed5521108298fdc', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:43:53.011"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24825875}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317db389ed5521108298fdc', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:43:53.012"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:57.607"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:57.813"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:57.835"}
{"message":"Started RentMovieApplication in 13.566 seconds (JVM running for 14.234)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:43:57.865"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"c173dfed6984d31e","spanId":"c173dfed6984d31e","timestamp_app":"2022-09-06 20:44:00.164"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"c173dfed6984d31e","spanId":"c173dfed6984d31e","timestamp_app":"2022-09-06 20:44:00.165"}
{"message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"c173dfed6984d31e","spanId":"c173dfed6984d31e","timestamp_app":"2022-09-06 20:44:00.168"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"c173dfed6984d31e","spanId":"c173dfed6984d31e","segmenta챌찾o":"Julianna","timestamp_app":"2022-09-06 20:44:00.220"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 4232 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:54.868"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:54.879"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:56.829"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:56.830"}
{"message":"Finished Spring Data repository scanning in 70 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:56.905"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:57.172"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:58.076"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:58.085"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:58.087"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:58.087"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:58.275"}
{"message":"Root WebApplicationContext: initialization completed in 3318 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:45:58.276"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@11180750, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@4b9f7edc], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@24fc2c80]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6d3ad37a], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$822/0x000000080111ca90@70ee1963}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:00.345"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:14}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317dbb8d9425e6444f4ecbb', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:46:00.369"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:15}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317dbb8d9425e6444f4ecbb', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:46:00.369"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34568541}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317dbb8d9425e6444f4ecbb', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:46:00.371"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:04.976"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:05.039"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:05.060"}
{"message":"Started RentMovieApplication in 11.491 seconds (JVM running for 12.25)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:05.092"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"1354516c51dea399","spanId":"1354516c51dea399","timestamp_app":"2022-09-06 20:46:07.182"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"1354516c51dea399","spanId":"1354516c51dea399","timestamp_app":"2022-09-06 20:46:07.184"}
{"message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"1354516c51dea399","spanId":"1354516c51dea399","timestamp_app":"2022-09-06 20:46:07.187"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"1354516c51dea399","spanId":"1354516c51dea399","segmenta챌찾o":"Julianna","timestamp_app":"2022-09-06 20:46:07.224"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 4284 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:43.650"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:43.656"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:45.676"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:45.677"}
{"message":"Finished Spring Data repository scanning in 77 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:45.759"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:46.057"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:46.992"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:47.001"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:47.003"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:47.003"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:47.177"}
{"message":"Root WebApplicationContext: initialization completed in 3445 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:47.178"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@13dd7887, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@37c87fcc], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@38929da]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@727453a3], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$821/0x000000080111b0f8@ca2be53}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:49.578"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:17}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317dbe91f3bf06526feadfc', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:46:49.602"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:16}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317dbe91f3bf06526feadfc', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:46:49.602"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26706875}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317dbe91f3bf06526feadfc', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:46:49.604"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:52.772"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:52.842"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:52.857"}
{"message":"Started RentMovieApplication in 10.195 seconds (JVM running for 10.862)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:46:52.884"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"4a4fd8ad386b740a","spanId":"4a4fd8ad386b740a","timestamp_app":"2022-09-06 20:47:13.558"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"4a4fd8ad386b740a","spanId":"4a4fd8ad386b740a","timestamp_app":"2022-09-06 20:47:13.560"}
{"message":"Completed initialization in 4 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"4a4fd8ad386b740a","spanId":"4a4fd8ad386b740a","timestamp_app":"2022-09-06 20:47:13.565"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"4a4fd8ad386b740a","spanId":"4a4fd8ad386b740a","segmenta챌찾o":"Julianna","timestamp_app":"2022-09-06 20:47:13.606"}
{"message":"Init duration for springdoc-openapi is: 366 ms","logger_name":"org.springdoc.api.AbstractOpenApiResource","thread_name":"http-nio-8082-exec-5","level":"INFO","traceId":"72df32af40335483","spanId":"72df32af40335483","timestamp_app":"2022-09-06 20:48:07.132"}
{"message":"Iniciando os trabalhos ","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-6","level":"INFO","traceId":"1f6671ed065cbec4","spanId":"1f6671ed065cbec4","timestamp_app":"2022-09-06 20:48:13.448"}
{"message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8082-exec-6","level":"ERROR","stack_trace":"org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"\n\tat org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)\n\tat org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:732)\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:343)\n\tat com.observability.com.rentmovie.service.RentService.findMovieById(RentService.java:37)\n\tat com.observability.com.rentmovie.service.RentService.lambda$rentMovies$1(RentService.java:27)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat com.observability.com.rentmovie.service.RentService.rentMovies(RentService.java:26)\n\tat com.observability.com.rentmovie.controller.RentController.rentMovie(RentController.java:27)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:68)\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.TraceWebServletConfiguration$LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:131)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\n\tat org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve.invoke(TraceValve.java:90)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n","traceId":"1f6671ed065cbec4","spanId":"1f6671ed065cbec4","timestamp_app":"2022-09-06 20:48:13.590"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-3","level":"INFO","traceId":"3e59166c0f8f9661","spanId":"3e59166c0f8f9661","segmenta챌찾o":"Julianna","timestamp_app":"2022-09-06 20:49:00.518"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 4620 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:40.668"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:40.676"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:42.671"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:42.674"}
{"message":"Finished Spring Data repository scanning in 98 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:42.780"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:43.057"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:44.007"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:44.015"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:44.016"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:44.017"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:44.209"}
{"message":"Root WebApplicationContext: initialization completed in 3450 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:44.210"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3cbfdf5c, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@42b43a6], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@42f9873e]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@154864f8], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$821/0x000000080111be28@1d622556}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:45.992"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:19}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317dcd5485b7f476fbd3e0e', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:50:46.057"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:18}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317dcd5485b7f476fbd3e0e', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:50:46.058"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26778125}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317dcd5485b7f476fbd3e0e', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:50:46.060"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:49.774"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:49.832"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:49.853"}
{"message":"Started RentMovieApplication in 10.437 seconds (JVM running for 11.193)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:50:49.876"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"90f453a7a432e2e8","spanId":"90f453a7a432e2e8","timestamp_app":"2022-09-06 20:50:54.100"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"90f453a7a432e2e8","spanId":"90f453a7a432e2e8","timestamp_app":"2022-09-06 20:50:54.101"}
{"message":"Completed initialization in 4 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"90f453a7a432e2e8","spanId":"90f453a7a432e2e8","timestamp_app":"2022-09-06 20:50:54.105"}
{"message":"Init duration for springdoc-openapi is: 520 ms","logger_name":"org.springdoc.api.AbstractOpenApiResource","thread_name":"http-nio-8082-exec-4","level":"INFO","traceId":"1b4448ac9cd6c22a","spanId":"1b4448ac9cd6c22a","timestamp_app":"2022-09-06 20:50:54.886"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-2","level":"INFO","traceId":"6ba50b4b48ab7d08","spanId":"6ba50b4b48ab7d08","teste":"1234","timestamp_app":"2022-09-06 20:50:58.119"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 4896 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:06.346"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:06.358"}
{"message":"Condition BraveBaggageConfiguration.BaggageTagSpanHandlerCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveBaggageConfiguration$BaggageTagSpanHandlerConfiguration did not match due to AnyNestedCondition 0 matched 4 did not; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.WhitelistedKeysYamlListProperty @ConditionalOnProperty (spring.sleuth.propagation.tag.whitelisted-keys[0]) did not find property 'spring.sleuth.propagation.tag.whitelisted-keys[0]'; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.WhitelistedKeysProperty @ConditionalOnProperty (spring.sleuth.propagation.tag.whitelisted-keys) did not find property 'spring.sleuth.propagation.tag.whitelisted-keys'; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.TagFieldsYamlListProperty @ConditionalOnProperty (spring.sleuth.baggage.tag-fields[0]) did not find property 'spring.sleuth.baggage.tag-fields[0]'; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.TagFieldsProperty @ConditionalOnProperty (spring.sleuth.baggage.tag-fields) did not find property 'spring.sleuth.baggage.tag-fields'","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.BraveBaggageConfiguration$BaggageTagSpanHandlerCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:55:07.381"}
{"message":"Condition AnyTracerModePropertySetCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveAutoConfiguration matched due to AnyNestedCondition 1 matched 1 did not; NestedCondition on AnyTracerModePropertySetCondition.OnConcreteTracerMode @ConditionalOnProperty (spring.sleuth.tracer.mode=BRAVE) did not find property 'spring.sleuth.tracer.mode'; NestedCondition on AnyTracerModePropertySetCondition.OnAutoTracerMode @ConditionalOnProperty (spring.sleuth.tracer.mode=AUTO) matched","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.AnyTracerModePropertySetCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:55:08.234"}
{"message":"Condition SamplerCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveSamplerConfiguration$NonRefreshScopeSamplerConfiguration did not match due to AnyNestedCondition 0 matched 3 did not; NestedCondition on SamplerCondition.TracingCustomizerAvailable @ConditionalOnBean (types: brave.TracingCustomizer; SearchStrategy: all) did not find any beans of type brave.TracingCustomizer; NestedCondition on SamplerCondition.SpanHandlerAvailable Composite handler found; NestedCondition on SamplerCondition.ReporterAvailable @ConditionalOnBean (types: zipkin2.reporter.Reporter; SearchStrategy: all) did not find any beans of type zipkin2.reporter.Reporter","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.SamplerCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:55:08.269"}
{"message":"Condition SamplerCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveSamplerConfiguration$RefreshScopedSamplerConfiguration did not match due to AnyNestedCondition 0 matched 3 did not; NestedCondition on SamplerCondition.TracingCustomizerAvailable @ConditionalOnBean (types: brave.TracingCustomizer; SearchStrategy: all) did not find any beans of type brave.TracingCustomizer; NestedCondition on SamplerCondition.SpanHandlerAvailable Composite handler found; NestedCondition on SamplerCondition.ReporterAvailable @ConditionalOnBean (types: zipkin2.reporter.Reporter; SearchStrategy: all) did not find any beans of type zipkin2.reporter.Reporter","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.SamplerCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:55:08.275"}
{"message":"Condition TraceMongoDbAutoConfiguration.EitherSynchronousOrReactiveContextProviderPresent on org.springframework.cloud.sleuth.autoconfig.instrument.mongodb.TraceMongoDbAutoConfiguration#traceMongoClientSettingsBuilderCustomizer matched due to AnyNestedCondition 1 matched 1 did not; NestedCondition on TraceMongoDbAutoConfiguration.EitherSynchronousOrReactiveContextProviderPresent.OnReactiveContextProvider @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.ReactiveContextProvider'; NestedCondition on TraceMongoDbAutoConfiguration.EitherSynchronousOrReactiveContextProviderPresent.OnSychronousContextProvider @ConditionalOnClass found required class 'com.mongodb.client.SynchronousContextProvider'","logger_name":"org.springframework.cloud.sleuth.autoconfig.instrument.mongodb.TraceMongoDbAutoConfiguration$EitherSynchronousOrReactiveContextProviderPresent","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:55:08.337"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:08.404"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:08.406"}
{"message":"Finished Spring Data repository scanning in 82 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:08.493"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:08.736"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:09.765"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:09.774"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:09.776"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:09.776"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:10.007"}
{"message":"Root WebApplicationContext: initialization completed in 3579 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:10.009"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@3cb195dd, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@22c29aa8], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@5ee6fdc4]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@37986daf], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$822/0x000000080111be28@129b69b2}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:11.809"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:21}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317dddfd1f93a6617e2ce16', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:55:11.831"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:20}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317dddfd1f93a6617e2ce16', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:55:11.830"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22893834}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317dddfd1f93a6617e2ce16', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:55:11.832"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:15.626"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:15.717"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:15.741"}
{"message":"Context refreshed or closed [org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6691490c, started on Tue Sep 06 20:55:06 BRT 2022]]","logger_name":"org.springframework.cloud.sleuth.internal.SleuthContextListener","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:55:15.764"}
{"message":"Started RentMovieApplication in 10.696 seconds (JVM running for 11.459)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:55:15.773"}
{"message":"Created a server receive span [NoopSpan(fa6421e9e7058763/fa6421e9e7058763)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve","thread_name":"http-nio-8082-exec-1","level":"DEBUG","timestamp_app":"2022-09-06 20:55:19.955"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"fa6421e9e7058763","spanId":"fa6421e9e7058763","timestamp_app":"2022-09-06 20:55:19.965"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"fa6421e9e7058763","spanId":"fa6421e9e7058763","timestamp_app":"2022-09-06 20:55:19.966"}
{"message":"Completed initialization in 3 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"fa6421e9e7058763","spanId":"fa6421e9e7058763","timestamp_app":"2022-09-06 20:55:19.969"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"fa6421e9e7058763","spanId":"fa6421e9e7058763","teste":"1234","timestamp_app":"2022-09-06 20:55:20.003"}
{"message":"Handled send of span [NoopSpan(fa6421e9e7058763/fa6421e9e7058763)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve","thread_name":"http-nio-8082-exec-1","level":"DEBUG","teste":"1234","timestamp_app":"2022-09-06 20:55:20.066"}
{"message":"Context refreshed or closed [org.springframework.context.event.ContextClosedEvent[source=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6691490c, started on Tue Sep 06 20:55:06 BRT 2022]]","logger_name":"org.springframework.cloud.sleuth.internal.SleuthContextListener","thread_name":"SpringApplicationShutdownHook","level":"TRACE","timestamp_app":"2022-09-06 20:56:00.396"}
{"message":"Starting RentMovieApplication using Java 17.0.1 on PPM-SPO-008597.local with PID 5036 (/Users/julianaoliveira/Documents/observability/rent/rent-movie/target/classes started by julianaoliveira in /Users/julianaoliveira/Documents/observability/rent)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:04.487"}
{"message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:04.493"}
{"message":"Condition BraveBaggageConfiguration.BaggageTagSpanHandlerCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveBaggageConfiguration$BaggageTagSpanHandlerConfiguration did not match due to AnyNestedCondition 0 matched 4 did not; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.WhitelistedKeysYamlListProperty @ConditionalOnProperty (spring.sleuth.propagation.tag.whitelisted-keys[0]) did not find property 'spring.sleuth.propagation.tag.whitelisted-keys[0]'; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.WhitelistedKeysProperty @ConditionalOnProperty (spring.sleuth.propagation.tag.whitelisted-keys) did not find property 'spring.sleuth.propagation.tag.whitelisted-keys'; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.TagFieldsYamlListProperty @ConditionalOnProperty (spring.sleuth.baggage.tag-fields[0]) did not find property 'spring.sleuth.baggage.tag-fields[0]'; NestedCondition on BraveBaggageConfiguration.BaggageTagSpanHandlerCondition.TagFieldsProperty @ConditionalOnProperty (spring.sleuth.baggage.tag-fields) did not find property 'spring.sleuth.baggage.tag-fields'","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.BraveBaggageConfiguration$BaggageTagSpanHandlerCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:56:05.552"}
{"message":"Condition AnyTracerModePropertySetCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveAutoConfiguration matched due to AnyNestedCondition 1 matched 1 did not; NestedCondition on AnyTracerModePropertySetCondition.OnConcreteTracerMode @ConditionalOnProperty (spring.sleuth.tracer.mode=BRAVE) did not find property 'spring.sleuth.tracer.mode'; NestedCondition on AnyTracerModePropertySetCondition.OnAutoTracerMode @ConditionalOnProperty (spring.sleuth.tracer.mode=AUTO) matched","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.AnyTracerModePropertySetCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:56:06.282"}
{"message":"Condition SamplerCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveSamplerConfiguration$NonRefreshScopeSamplerConfiguration did not match due to AnyNestedCondition 0 matched 3 did not; NestedCondition on SamplerCondition.TracingCustomizerAvailable @ConditionalOnBean (types: brave.TracingCustomizer; SearchStrategy: all) did not find any beans of type brave.TracingCustomizer; NestedCondition on SamplerCondition.SpanHandlerAvailable Composite handler found; NestedCondition on SamplerCondition.ReporterAvailable @ConditionalOnBean (types: zipkin2.reporter.Reporter; SearchStrategy: all) did not find any beans of type zipkin2.reporter.Reporter","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.SamplerCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:56:06.299"}
{"message":"Condition SamplerCondition on org.springframework.cloud.sleuth.autoconfig.brave.BraveSamplerConfiguration$RefreshScopedSamplerConfiguration did not match due to AnyNestedCondition 0 matched 3 did not; NestedCondition on SamplerCondition.TracingCustomizerAvailable @ConditionalOnBean (types: brave.TracingCustomizer; SearchStrategy: all) did not find any beans of type brave.TracingCustomizer; NestedCondition on SamplerCondition.SpanHandlerAvailable Composite handler found; NestedCondition on SamplerCondition.ReporterAvailable @ConditionalOnBean (types: zipkin2.reporter.Reporter; SearchStrategy: all) did not find any beans of type zipkin2.reporter.Reporter","logger_name":"org.springframework.cloud.sleuth.autoconfig.brave.SamplerCondition","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:56:06.300"}
{"message":"Condition TraceMongoDbAutoConfiguration.EitherSynchronousOrReactiveContextProviderPresent on org.springframework.cloud.sleuth.autoconfig.instrument.mongodb.TraceMongoDbAutoConfiguration#traceMongoClientSettingsBuilderCustomizer matched due to AnyNestedCondition 1 matched 1 did not; NestedCondition on TraceMongoDbAutoConfiguration.EitherSynchronousOrReactiveContextProviderPresent.OnReactiveContextProvider @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.ReactiveContextProvider'; NestedCondition on TraceMongoDbAutoConfiguration.EitherSynchronousOrReactiveContextProviderPresent.OnSychronousContextProvider @ConditionalOnClass found required class 'com.mongodb.client.SynchronousContextProvider'","logger_name":"org.springframework.cloud.sleuth.autoconfig.instrument.mongodb.TraceMongoDbAutoConfiguration$EitherSynchronousOrReactiveContextProviderPresent","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:56:06.337"}
{"message":"Multiple Spring Data modules found, entering strict repository configuration mode","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:06.410"}
{"message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:06.412"}
{"message":"Finished Spring Data repository scanning in 126 ms. Found 2 MongoDB repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:06.542"}
{"message":"BeanFactory id=cfcc76a9-8fe8-30c5-acf7-e5f7717a03ae","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:06.826"}
{"message":"Tomcat initialized with port(s): 8082 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:07.888"}
{"message":"Initializing ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:07.896"}
{"message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:07.898"}
{"message":"Starting Servlet engine: [Apache Tomcat/9.0.65]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:07.898"}
{"message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:08.081"}
{"message":"Root WebApplicationContext: initialization completed in 3529 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:08.082"}
{"message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"4.6.1\"}, \"os\": {\"type\": \"Darwin\", \"name\": \"Mac OS X\", \"architecture\": \"x86_64\", \"version\": \"11.4\"}, \"platform\": \"Java/Azul Systems, Inc./17.0.1+12-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, streamFactoryFactory=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@780129bc, org.springframework.cloud.sleuth.instrument.mongodb.TraceMongoCommandListener@ca2be53], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.Jep395RecordCodecProvider@69d667a5]}, clusterSettings={hosts=[localhost:27018], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='30000 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, sendBufferSize=0}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, sendBufferSize=0}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@67dc6b48], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, contextProvider=org.springframework.cloud.sleuth.instrument.mongodb.TraceSynchronousMongoClientSettingsBuilderCustomizer$$Lambda$821/0x000000080111be28@78f5cbc5}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:09.891"}
{"message":"Opened connection [connectionId{localValue:1, serverValue:22}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-ClusterId{value='6317de1953fae31fd0f86839', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:56:09.925"}
{"message":"Opened connection [connectionId{localValue:2, serverValue:23}] to localhost:27018","logger_name":"org.mongodb.driver.connection","thread_name":"cluster-rtt-ClusterId{value='6317de1953fae31fd0f86839', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:56:09.925"}
{"message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27018, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23964875}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6317de1953fae31fd0f86839', description='null'}-localhost:27018","level":"INFO","timestamp_app":"2022-09-06 20:56:09.928"}
{"message":"Exposing 2 endpoint(s) beneath base path ''","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:13.530"}
{"message":"Starting ProtocolHandler [\"http-nio-8082\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:13.585"}
{"message":"Tomcat started on port(s): 8082 (http) with context path ''","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:13.604"}
{"message":"Context refreshed or closed [org.springframework.context.event.ContextRefreshedEvent[source=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6691490c, started on Tue Sep 06 20:56:04 BRT 2022]]","logger_name":"org.springframework.cloud.sleuth.internal.SleuthContextListener","thread_name":"main","level":"TRACE","timestamp_app":"2022-09-06 20:56:13.626"}
{"message":"Started RentMovieApplication in 10.107 seconds (JVM running for 10.886)","logger_name":"com.observability.com.rentmovie.RentMovieApplication","thread_name":"main","level":"INFO","timestamp_app":"2022-09-06 20:56:13.629"}
{"message":"Created a server receive span [NoopSpan(b8977671e9552cb5/b8977671e9552cb5)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve","thread_name":"http-nio-8082-exec-1","level":"DEBUG","timestamp_app":"2022-09-06 20:56:15.979"}
{"message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b8977671e9552cb5","spanId":"b8977671e9552cb5","timestamp_app":"2022-09-06 20:56:15.988"}
{"message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b8977671e9552cb5","spanId":"b8977671e9552cb5","timestamp_app":"2022-09-06 20:56:15.988"}
{"message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b8977671e9552cb5","spanId":"b8977671e9552cb5","timestamp_app":"2022-09-06 20:56:15.990"}
{"message":"Hello Sleuth","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-1","level":"INFO","traceId":"b8977671e9552cb5","spanId":"b8977671e9552cb5","teste":"1234","timestamp_app":"2022-09-06 20:56:16.029"}
{"message":"Handled send of span [NoopSpan(b8977671e9552cb5/b8977671e9552cb5)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve","thread_name":"http-nio-8082-exec-1","level":"DEBUG","teste":"1234","timestamp_app":"2022-09-06 20:56:16.048"}
{"message":"Created a server receive span [NoopSpan(c7084cf6635ddecd/c7084cf6635ddecd)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve","thread_name":"http-nio-8082-exec-2","level":"DEBUG","timestamp_app":"2022-09-06 20:57:28.664"}
{"message":"Iniciando os trabalhos ","logger_name":"com.observability.com.rentmovie.controller.RentController","thread_name":"http-nio-8082-exec-2","level":"INFO","traceId":"c7084cf6635ddecd","spanId":"c7084cf6635ddecd","timestamp_app":"2022-09-06 20:57:28.789"}
{"message":"Wrapping an outbound http call with span [NoopSpan(c7084cf6635ddecd/7120d2f15571ed3a)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.mvc.TracingClientHttpRequestInterceptor","thread_name":"http-nio-8082-exec-2","level":"DEBUG","traceId":"c7084cf6635ddecd","spanId":"c7084cf6635ddecd","timestamp_app":"2022-09-06 20:57:28.822"}
{"message":"Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]","thread_name":"http-nio-8082-exec-2","level":"ERROR","stack_trace":"org.springframework.web.client.HttpClientErrorException$BadRequest: 400 : \"{\"code\":\"400\",\"description\":\"Filme com c처digo informado n찾o encontrado\"}\"\n\tat org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:101)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)\n\tat org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)\n\tat org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)\n\tat org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:732)\n\tat org.springframework.web.client.RestTemplate.getForObject(RestTemplate.java:343)\n\tat com.observability.com.rentmovie.service.RentService.findMovieById(RentService.java:37)\n\tat com.observability.com.rentmovie.service.RentService.lambda$rentMovies$1(RentService.java:27)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat com.observability.com.rentmovie.service.RentService.rentMovies(RentService.java:26)\n\tat com.observability.com.rentmovie.controller.RentController.rentMovie(RentController.java:27)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:681)\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:764)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.cloud.sleuth.instrument.web.servlet.TracingFilter.doFilter(TracingFilter.java:68)\n\tat org.springframework.cloud.sleuth.autoconfig.instrument.web.TraceWebServletConfiguration$LazyTracingFilter.doFilter(TraceWebServletConfiguration.java:131)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\n\tat org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve.invoke(TraceValve.java:90)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n","traceId":"c7084cf6635ddecd","spanId":"c7084cf6635ddecd","timestamp_app":"2022-09-06 20:57:28.892"}
{"message":"Handled send of span [NoopSpan(c7084cf6635ddecd/c7084cf6635ddecd)]","logger_name":"org.springframework.cloud.sleuth.instrument.web.tomcat.TraceValve","thread_name":"http-nio-8082-exec-2","level":"DEBUG","timestamp_app":"2022-09-06 20:57:28.918"}
{"message":"Context refreshed or closed [org.springframework.context.event.ContextClosedEvent[source=org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6691490c, started on Tue Sep 06 20:56:04 BRT 2022]]","logger_name":"org.springframework.cloud.sleuth.internal.SleuthContextListener","thread_name":"SpringApplicationShutdownHook","level":"TRACE","timestamp_app":"2022-09-06 20:58:32.718"}
